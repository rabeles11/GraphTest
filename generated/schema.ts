// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class NameOfUsers extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save NameOfUsers entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        `Entities of type NameOfUsers must have an ID of type String but the id '${id.displayData()}' is of type ${id.displayKind()}`
      );
      store.set("NameOfUsers", id.toString(), this);
    }
  }

  static load(id: string): NameOfUsers | null {
    return changetype<NameOfUsers | null>(store.get("NameOfUsers", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get adres_of_user(): Bytes | null {
    let value = this.get("adres_of_user");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set adres_of_user(value: Bytes | null) {
    if (!value) {
      this.unset("adres_of_user");
    } else {
      this.set("adres_of_user", Value.fromBytes(<Bytes>value));
    }
  }

  get displayName(): string | null {
    let value = this.get("displayName");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set displayName(value: string | null) {
    if (!value) {
      this.unset("displayName");
    } else {
      this.set("displayName", Value.fromString(<string>value));
    }
  }

  get surName(): string | null {
    let value = this.get("surName");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set surName(value: string | null) {
    if (!value) {
      this.unset("surName");
    } else {
      this.set("surName", Value.fromString(<string>value));
    }
  }
}
